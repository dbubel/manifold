syntax = "proto3";

package manifold;
option go_package = "./proto";

enum Priority {
  NORMAL = 0;
  HIGH = 1;
}

message EnqueueMsg {
  string topicName = 1;
  bytes data = 2;
  Priority priority = 3;
}

message EnqueueAck {
  string data = 1;
}

message DequeueMsg {
  string topicName = 1;
}

message DequeueAck {
  bytes data = 1;
}

message Empty {}

message StringList {
  map<string, int32> my_map = 1;
}

message Length {
  int32 length = 1;
}

message DeleteTopicMsg {
  string topicName = 1;
}

message Remove {
  string id = 1;
  string topicName = 2;
}



service Manifold {
  rpc Enqueue(EnqueueMsg) returns (Empty) {}
  // rpc Dequeue(DequeueMsg) returns (DequeueAck) {}
  rpc StreamDequeue (DequeueMsg) returns (stream DequeueAck);
  rpc Ack (Remove) returns (Empty) {}
  // rpc StreamEnqueue (EnqueueMsg) returns (stream EnqueueAck);
  rpc ListTopics(Empty) returns (StringList) {}
  rpc DeleteTopic(DeleteTopicMsg) returns (Empty) {}
  rpc TopicLength(DequeueMsg) returns (Length) {}
}
